name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  Conductor:
    runs-on: ubuntu-latest

    env: 
      MONGO_CREDENTIALS: ${{ secrets.MONGO_CREDENTIALS }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.11.0'

      - name: Install Dependencies
        run: npm install
        working-directory: ./app

      - name: Build Frontend
        run: npm run build
        working-directory: ./app

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
    
      - name: Elevate Gradle Permissions
        run: sudo chmod +x gradlew
        working-directory: ./appserver

      - name: Clean Backend
        run: ./gradlew clean
        working-directory: ./appserver

      - name: Build Backend
        run: ./gradlew build
        working-directory: ./appserver

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Extract Runner IP Address
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Whitelist Runner IP Address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: SCP into EC2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "app/public/*, appserver/build/*"
          target: "~/Europe-Saviors/"

      - name: SSH into EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            export SPRING_PROFILES_ACTIVE=prod
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd ~/Europe-Saviors
            git pull origin main
            pm2 restart myApp
            pm2 restart spring-boot-app
            pm2 save --force
      
      - name: Revoke Runner IP Address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
